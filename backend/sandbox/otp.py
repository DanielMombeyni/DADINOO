import httpx


class OTPService:
    def __init__(self):
        self.api_url = "https://api2.ippanel.com/api/v1/sms/send/webservice/single"
        self.token = "OWVlODg5ZTItZTlhZi00ODlhLTg2M2UtYTUwMDBhNWFhZjZmODVhZTdjYzI2YmJiOWUyOGFhZDM4YzljMTZjNzdkZGI="
        self.sender = "+983000505"

    def render_message(self, otp):
        return f"""\
Ø¯Ø§Ø¯ÛŒÙ†Ùˆ
ðŸ‘‹ Ø®ÙˆØ´ Ø¢Ù…Ø¯ÛŒØ¯!
Ø¯Ø³ØªÛŒØ§Ø± Ø­Ù‚ÙˆÙ‚ÛŒ Ø¯Ø§Ø¯ÛŒÙ†Ùˆ Ø¢Ù…Ø§Ø¯Ù‡ Ø®Ø¯Ù…Øªâ€ŒØ±Ø³Ø§Ù†ÛŒ Ø¨Ù‡ Ø´Ù…Ø§Ø³Øª.

Ú©Ø¯ ØªØ£ÛŒÛŒØ¯ Ø´Ù…Ø§: {otp}
Ø§ÛŒÙ† Ú©Ø¯ Ø¨Ù‡ Ù…Ø¯Øª Û² Ø¯Ù‚ÛŒÙ‚Ù‡ Ù…Ø¹ØªØ¨Ø± Ø§Ø³Øª.

Ø§Ú¯Ø± Ø´Ù…Ø§ Ø¯Ø±Ø®ÙˆØ§Ø³Øª ÙˆØ±ÙˆØ¯ Ù†Ú©Ø±Ø¯Ù‡â€ŒØ§ÛŒØ¯ØŒ Ø§ÛŒÙ† Ù¾ÛŒØ§Ù… Ø±Ø§ Ù†Ø§Ø¯ÛŒØ¯Ù‡ Ø¨Ú¯ÛŒØ±ÛŒØ¯.
"""

    async def send_otp(self, phone_number: str, otp: str):
        message = self.render_message(otp)

        payload = {
            "recipient": [phone_number],
            "sender": self.sender,
            "message": message,
        }

        headers = {
            "apikey": self.token,
            "Content-Type": "application/json",
        }

        async with httpx.AsyncClient() as client:
            response = await client.post(self.api_url, json=payload, headers=headers)

        if response.status_code == 200:
            return {"status": "sent", "otp": otp}
        else:
            try:
                error_data = response.json()
            except Exception:
                error_data = response.text  # Ù†Ù…Ø§ÛŒØ´ Ù…ØªÙ† Ø®Ø§Ù… Ø§Ú¯Ù‡ JSON Ù†Ø¨ÙˆØ¯

            return {
                "status": "failed",
                "http_status": response.status_code,
                "error": error_data,
            }
