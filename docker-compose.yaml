services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # - dev-static-data:/vol/web
      - dev-static-data:/vol/web/static
      - dev-media-data:/vol/web/media
    command: >
      sh -c "python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=devpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
  # frontend:
  #   build:
  #     context: ./FrontEnd
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   volumes:
  #     - ./FrontEnd:/app
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000 # Backend API URL
  #   depends_on:
  #     - backend

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=devpassword
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Mount custom Nginx configuration
      - dev-static-data:/vol/web/static
      - dev-media-data:/vol/web/media
    depends_on:
      - backend
      # - frontend

volumes:
  dev-db-data:
  dev-static-data:
  dev-media-data:
  redis-data:
